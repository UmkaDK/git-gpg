#!/usr/bin/env bash

: ${SRC_DIR:="$([[ -L "${BASH_SOURCE}" ]] \
    && dirname "$(dirname "$(readlink "${BASH_SOURCE}")")" \
    || dirname "$(cd "$(dirname "${BASH_SOURCE}")" && pwd)")"}
VERSION="$(cat "${SRC_DIR}/VERSION")"
eval "$(find "${SRC_DIR}/lib" \( -type f -o -type l \) -exec cat {} \;)"

# --- --- ---

set_var GIT_BIN "$(type -P git)" "Missing git executable (GIT_BIN)"
set_var GPG_BIN "$(type -P gpg)" "Missing gpg executable (GPG_BIN)"

git rev-parse --is-inside-work-tree >/dev/null || exit
: ${GIT_TOPLEVEL_DIR:="$(${GIT_BIN} rev-parse --show-toplevel)"}
: ${GIT_GPG_COLOR:="$(use_color_bool)"}

while getopts_long ':cl:nq color no-color log: quiet version help' OPTKEY; do
    case ${OPTKEY} in
        'c'|'color')
            GIT_GPG_COLOR='true'
            ;;
        'n'|'no-color')
            GIT_GPG_COLOR='false'
            ;;
        'l'|'log')
            mkdir -p $(dirname ${OPTARG})
            exec 5>&1 6>&2 # Backup STDOUT and STDERR
            exec > ${OPTARG} 2>&1
            ;;
        'q'|'quiet')
            exec 5>&1 6>&2 # Backup STDOUT and STDERR
            exec 1>/dev/null 2>/dev/null
            ;;
        'version'|'help')
            COMMAND="${OPTKEY}"
            ;;
        '?')
            die "illegal option -- ${OPTARG}"
            ;;
        ':')
            die "option requires an argument -- ${OPTARG}"
            ;;
        *)
            die "unimplemented option -- ${OPTKEY}"
            ;;
    esac
done

shift $(( OPTIND - 1 ))
[[ "${1}" == "--" ]] && shift

[[ -z "${COMMAND}" ]] && COMMAND="${1}" && shift
[[ -z "${COMMAND}" ]] && die "missing required command"

case ${COMMAND} in
    'install'|'keys'|'track'|'untrack'|'clean'|'smudge'|'textconv')
        trap __exit EXIT
        __init
        ;;
    'help')
        if [[ -z "${@}" ]]; then
            __help
            exit
        elif type -t "__help_${1}" >/dev/null; then
            __help_${1}
            exit
        else
            die "undocumented command -- ${1}"
        fi
        ;;
    'version')
        version
        exit
        ;;
    *)
        die "illegal command -- ${COMMAND}"
        ;;
esac
